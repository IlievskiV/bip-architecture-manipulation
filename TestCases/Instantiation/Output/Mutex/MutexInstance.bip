model MutualExclusion
  compound type Mutex
    component Coordinator C
    component Operand B1
    component Operand B2
    connector beginConnector B_to_C_begin_1(C.take, B2.begin)
    connector beginConnector B_to_C_begin_2(C.take, B1.begin)
    connector finishConnector B_to_C_finish_1(C.release, B1.finish)
    connector finishConnector B_to_C_finish_2(C.release, B2.finish)
  end

  port type BeginPort
  port type FinishPort
  atomic type Coordinator
    export port BeginPort take()
    export port FinishPort release()
    place taken
    place free
    initial to free
    on take
      from free to taken
    on release
      from taken to free


  end

  atomic type Operand
    export port BeginPort begin()
    export port FinishPort finish()
    place work
    place sleep
    initial to sleep
    on begin
      from sleep to work
    on finish
      from work to sleep


  end

  connector type beginConnector(BeginPort b, BeginPort t)
    define  b t
  end

  connector type finishConnector(FinishPort f, FinishPort r)
    define  f r
  end

  component Mutex mutex
end
