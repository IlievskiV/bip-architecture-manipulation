model MutualExclusion

	port type BeginPort
	port type FinishPort
	
	atomic type Operand
		
		export port BeginPort begin()
		export port FinishPort finish()

		place work, sleep
		initial to sleep	

		on begin from sleep to work	
		on finish from work to sleep
	end


	atomic type Coordinator
		
		export port BeginPort take()
		export port FinishPort release()

		place taken, free
		initial to free

		on take from free to taken
		on release from taken to free
	end


	connector type beginConnector(BeginPort b, BeginPort t)
		define b t
	end

	connector type finishConnector(FinishPort f, FinishPort r)
		define f r
	end

	compound type Mutex
		component Coordinator C13
		component Operand B1
		component Operand B3

		connector beginConnector B1_to_C13_begin(B1.begin,C13.take)
		connector finishConnector B1_to_C13_finish(B1.finish,C13.release)

		connector beginConnector B3_to_C13_begin(B3.begin,C13.take)
		connector finishConnector B3_to_C13_finish(B3.finish,C13.release)
	end

	component Mutex mutex
end
